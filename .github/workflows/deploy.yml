name: Deploy to Oracle Cloud

on:
  push:
    branches:
      - master
    paths:
      - 'front/**'
      - 'GCP/**'   # GCP 폴더 변화도 감지

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[up]')"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        working-directory: ./front
        run: npm install
        
      - name: Build
        working-directory: ./front
        run: npm run build

      # AWS 관련 단계 삭제 후 Oracle Cloud 배포 단계 추가
      - name: Prepare SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/oracle_rsa
          chmod 600 ~/.ssh/oracle_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
        env:
          SSH_KEY: ${{ secrets.ORACLE_SSH_KEY }}

      - name: Deploy via SCP
        run: |
          scp -i ~/.ssh/oracle_rsa -o UserKnownHostsFile=/dev/null -r front/dist/* ${{ secrets.SSH_USER }}@${{ secrets.ORACLE_SERVER_IP }}:/var/www/html2
          ssh -i ~/.ssh/oracle_rsa ${{ secrets.SSH_USER }}@${{ secrets.ORACLE_SERVER_IP }} "sudo systemctl reload nginx"

  docker-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: exam-serverless  # ECR 리포지토리명
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./GCP
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
